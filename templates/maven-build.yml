parameters:
  - name: storageAccountName
    displayName: Storage Account Name
    type: string

  - name: storageAccountAccessKey
    displayName: Storage Account Access Key
    type: string

  - name: appDir
    displayName: Application directory
    type: string

  - name: isTest
    displayName: Run test
    type: boolean
    default: false

  - name: isConnectToFeed
    displayName: Connect to Azure feed
    type: boolean
    default: true

  # default permissions that was generated by Fileshare
  - name: accessPermissions
    displayName: Permission to grant access
    type: string
    default: 'dir_mode=0777,file_mode=0777,serverino,nosharesock,actimeo=30'

  - name: credentialSmbDir
    displayName: Storage Account Access Key
    type: string
    default: '/etc/smbcredentials'

  - name: m2SourceSubPathDir
    displayName: Path of directory containt .m2 folder in Fileshare
    type: string
    default: 'maven-dependencies/.m2'

  - name: m2TargetMountDir
    displayName: Path of directory will be mount .m2 folder at local machine
    type: string
    default: '~/.m2'

  - name: mavenSourceSubPathDir
    displayName: Path of directory containt Apache Maven folder in Fileshare
    type: string
    default: 'devops-softwares/maven/apache-maven-3.6.3'

  - name: mavenTargetMountDir
    displayName: Path of directory will be mount Maven folder at local machine
    type: string
    default: '/mnt/devops-softwares/maven/apache-maven-3.6.3'

  - name: mavenOptsParams
    displayName: Maven opts params
    type: string
    default: ''

  - name: mavenGoals
    displayName: Maven goals
    type: string
    default: 'clean install -B -e'

  - name: 'preBuild'
    type: stepList
    default: []

  - name: 'postBuild'
    type: stepList
    default: []

steps:
  - ${{ parameters.preBuild }}

  - bash: |
      echo "##vso[task.setvariable variable=credentialSmbPath;isOutput=true]${{ parameters.credentialSmbDir }}/${{ parameters.storageAccountName }}.cred"
      echo "##vso[task.setvariable variable=m2SourceMountDir;isOutput=true]//${{ parameters.storageAccountName }}.file.core.windows.net/${{ parameters.m2SourceSubPathDir }}"
      echo "##vso[task.setvariable variable=mavenSourceMountDir;isOutput=true]//${{ parameters.storageAccountName }}.file.core.windows.net/${{ parameters.mavenSourceSubPathDir }}"
      echo "##vso[task.setvariable variable=mavenSourceMountDir;isOutput=true]//${{ parameters.storageAccountName }}.file.core.windows.net/${{ parameters.mavenSourceSubPathDir }}"

      if [ "$IS_TEST" == "true" ]
      then
        echo "##vso[task.setvariable variable=MAVEN_OPTS;isOutput=true]-Dmaven.repo.local=$MAVEN_CACHE_FOLDER $MAVEN_OPTS_PARAMS"
      else
        echo "##vso[task.setvariable variable=MAVEN_OPTS;isOutput=true]-Dmaven.repo.local=$MAVEN_CACHE_FOLDER -Dmaven.test.skip=true $MAVEN_OPTS_PARAMS"
      fi
    env:
      IS_TEST: ${{ parameters.isTest }}
      MAVEN_OPTS_PARAMS: ${{ parameters.mavenOptsParams }}
      MAVEN_CACHE_FOLDER: ${{ parameters.m2TargetMountDir }}/repository
    displayName: Init variables
    name: getterVariables

  - bash: |
      echo $(getterVariables.credentialSmbPath)

      if [ ! -d "${{ parameters.credentialSmbDir }}" ]; then
        sudo mkdir ${{ parameters.credentialSmbDir }}
      fi
      if [ ! -f "$(getterVariables.credentialSmbPath)" ]; then
          sudo bash -c 'echo "username=${{ parameters.storageAccountName }}" >> $(getterVariables.credentialSmbPath)'
          sudo bash -c 'echo "password=${{ parameters.storageAccountAccessKey }}" >> $(getterVariables.credentialSmbPath)'
      fi
      sudo chmod 600 $(getterVariables.credentialSmbPath)
    displayName: Set up the credential to connect to FileShare.

  - bash: |
      sudo mkdir -p ${{ parameters.m2TargetMountDir }}

      sudo bash -c 'echo "$(getterVariables.m2SourceMountDir) ${{ parameters.m2TargetMountDir }} cifs nofail,credentials=$(getterVariables.credentialSmbPath),${{ parameters.accessPermissions }}" >> /etc/fstab'
      sudo mount -t cifs $(getterVariables.m2SourceMountDir) ${{ parameters.m2TargetMountDir }} -o credentials=$(getterVariables.credentialSmbPath),${{ parameters.accessPermissions }}
    displayName: Mount .m2 folder as dependencies

  - bash: |
      sudo mkdir -p ${{ parameters.mavenTargetMountDir }}

      sudo bash -c 'echo "$(getterVariables.mavenSourceMountDir) ${{ parameters.mavenTargetMountDir }} cifs nofail,credentials=$(getterVariables.credentialSmbPath),${{ parameters.accessPermissions }}" >> /etc/fstab'
      sudo mount -t cifs $(getterVariables.mavenSourceMountDir) ${{ parameters.mavenTargetMountDir }} -o credentials=$(getterVariables.credentialSmbPath),${{ parameters.accessPermissions }}
    displayName: Mount Maven as software

  - ${{ if eq(parameters.isConnectToFeed, true) }}:
      - task: MavenAuthenticate@0
        displayName: 'Maven Authenticate'
        inputs:
          artifactsFeeds: devops-feed

  - task: Maven@4
    inputs:
      mavenPOMFile: '${{ parameters.appDir }}/pom.xml'
      goals: ${{ parameters.mavenGoals }}
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      mavenVersionOption: 'Path'
      mavenDirectory: '${{ parameters.mavenTargetMountDir }}'
      mavenSetM2Home: true
      mavenOptions: '-Xmx1024m $(getterVariables.MAVEN_OPTS)'
      mavenAuthenticateFeed: ${{ parameters.isConnectToFeed }}

  - ${{ parameters.postBuild }}
