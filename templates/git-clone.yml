parameters:
  - name: workDir
    displayName: Working directory
    type: string

  - name: sourceFolder
    displayName: Source folder
    type: string
    default: 'app-source'

  - name: gitUrl
    displayName: Url of git
    type: string

  - name: gitUsername
    displayName: Username of git
    type: string
    default: ''

  - name: gitToken
    displayName: Token of git
    type: string
    default: ''

  - name: gitBranch
    displayName: Token of git
    type: string

  - name: isPrivateRepo
    displayName: Is private repo
    type: string
    default: 'false'

  - name: preSteps
    type: stepList
    default: []

  - name: postSteps
    type: stepList
    default: []

steps:
  - ${{ parameters.preSteps }}

  - bash: |
      if [[ "${IS_PRIVATE_REPO}" == "true" ]]
      then
        GIT_PROTOCOL="$(echo $GIT_URL | grep :// | sed -e's,^\(.*://\).*,\1,g')"
        GIT_URI="$(echo ${GIT_URL/$GIT_PROTOCOL/})"
        GIT_CREDENTIAL_URL="${GIT_PROTOCOL}${GIT_USERNAME}:${GIT_TOKEN}@${GIT_URI}"
      else
        GIT_CREDENTIAL_URL=${GIT_URL}
      fi

      mkdir -p ${SOURCE_FOLDER} && \
      cd ${SOURCE_FOLDER} && \
      git clone $GIT_CREDENTIAL_URL . && \
      git checkout $GIT_BRANCH
    env:
      IS_PRIVATE_REPO: ${{ parameters.isPrivateRepo }}
      GIT_URL: ${{ parameters.gitUrl }}
      GIT_USERNAME: ${{ parameters.gitUsername }}
      GIT_TOKEN: ${{ parameters.gitToken }}
      GIT_BRANCH: ${{ parameters.gitBranch }}
      SOURCE_FOLDER: ${{ parameters.sourceFolder }}
    workingDirectory: ${{ parameters.workDir }}
    displayName: Clone project

  - bash: |
      ls -la
    workingDirectory: ${{ parameters.workDir }}
    displayName: Verify project

  - bash: |
      GIT_COMMIT_ID=$(git rev-parse HEAD)
      echo "##vso[task.setvariable variable=gitCommitId;isOutput=true]${GIT_COMMIT_ID}"
      echo "##vso[task.setvariable variable=gitShortCommitId;isOutput=true]${GIT_COMMIT_ID:0:8}"
    workingDirectory: ${{ parameters.workDir }}
    name: gitGetter
    displayName: Initialize git vars

  - ${{ parameters.postSteps }}
